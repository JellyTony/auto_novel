// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.0
// source: video_script/v1/video_script.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 生成短视频脚本请求
type GenerateVideoScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ChapterId      string `protobuf:"bytes,2,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	ChapterTitle   string `protobuf:"bytes,3,opt,name=chapter_title,json=chapterTitle,proto3" json:"chapter_title,omitempty"`
	ChapterContent string `protobuf:"bytes,4,opt,name=chapter_content,json=chapterContent,proto3" json:"chapter_content,omitempty"`
	Platform       string `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`         // 目标平台：douyin/kuaishou/bilibili/xiaohongshu/weibo
	Duration       int32  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`        // 视频时长（秒）
	Style          string `protobuf:"bytes,7,opt,name=style,proto3" json:"style,omitempty"`               // 风格：dramatic/humorous/suspenseful/romantic/action
	Requirements   string `protobuf:"bytes,8,opt,name=requirements,proto3" json:"requirements,omitempty"` // 特殊要求
}

func (x *GenerateVideoScriptRequest) Reset() {
	*x = GenerateVideoScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateVideoScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateVideoScriptRequest) ProtoMessage() {}

func (x *GenerateVideoScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateVideoScriptRequest.ProtoReflect.Descriptor instead.
func (*GenerateVideoScriptRequest) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateVideoScriptRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GenerateVideoScriptRequest) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *GenerateVideoScriptRequest) GetChapterTitle() string {
	if x != nil {
		return x.ChapterTitle
	}
	return ""
}

func (x *GenerateVideoScriptRequest) GetChapterContent() string {
	if x != nil {
		return x.ChapterContent
	}
	return ""
}

func (x *GenerateVideoScriptRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *GenerateVideoScriptRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *GenerateVideoScriptRequest) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *GenerateVideoScriptRequest) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

// 生成短视频脚本响应
type GenerateVideoScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoScript *VideoScript `protobuf:"bytes,1,opt,name=video_script,json=videoScript,proto3" json:"video_script,omitempty"`
}

func (x *GenerateVideoScriptResponse) Reset() {
	*x = GenerateVideoScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateVideoScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateVideoScriptResponse) ProtoMessage() {}

func (x *GenerateVideoScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateVideoScriptResponse.ProtoReflect.Descriptor instead.
func (*GenerateVideoScriptResponse) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateVideoScriptResponse) GetVideoScript() *VideoScript {
	if x != nil {
		return x.VideoScript
	}
	return nil
}

// 优化短视频脚本请求
type OptimizeVideoScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId     string `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
	Requirements string `protobuf:"bytes,2,opt,name=requirements,proto3" json:"requirements,omitempty"` // 优化要求
}

func (x *OptimizeVideoScriptRequest) Reset() {
	*x = OptimizeVideoScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptimizeVideoScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizeVideoScriptRequest) ProtoMessage() {}

func (x *OptimizeVideoScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizeVideoScriptRequest.ProtoReflect.Descriptor instead.
func (*OptimizeVideoScriptRequest) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{2}
}

func (x *OptimizeVideoScriptRequest) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

func (x *OptimizeVideoScriptRequest) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

// 优化短视频脚本响应
type OptimizeVideoScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoScript *VideoScript `protobuf:"bytes,1,opt,name=video_script,json=videoScript,proto3" json:"video_script,omitempty"`
}

func (x *OptimizeVideoScriptResponse) Reset() {
	*x = OptimizeVideoScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptimizeVideoScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizeVideoScriptResponse) ProtoMessage() {}

func (x *OptimizeVideoScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizeVideoScriptResponse.ProtoReflect.Descriptor instead.
func (*OptimizeVideoScriptResponse) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{3}
}

func (x *OptimizeVideoScriptResponse) GetVideoScript() *VideoScript {
	if x != nil {
		return x.VideoScript
	}
	return nil
}

// 生成平台变体请求
type GeneratePlatformVariantsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseScriptId    string   `protobuf:"bytes,1,opt,name=base_script_id,json=baseScriptId,proto3" json:"base_script_id,omitempty"`
	TargetPlatforms []string `protobuf:"bytes,2,rep,name=target_platforms,json=targetPlatforms,proto3" json:"target_platforms,omitempty"`
}

func (x *GeneratePlatformVariantsRequest) Reset() {
	*x = GeneratePlatformVariantsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePlatformVariantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePlatformVariantsRequest) ProtoMessage() {}

func (x *GeneratePlatformVariantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePlatformVariantsRequest.ProtoReflect.Descriptor instead.
func (*GeneratePlatformVariantsRequest) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{4}
}

func (x *GeneratePlatformVariantsRequest) GetBaseScriptId() string {
	if x != nil {
		return x.BaseScriptId
	}
	return ""
}

func (x *GeneratePlatformVariantsRequest) GetTargetPlatforms() []string {
	if x != nil {
		return x.TargetPlatforms
	}
	return nil
}

// 生成平台变体响应
type GeneratePlatformVariantsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Variants []*VideoScript `protobuf:"bytes,1,rep,name=variants,proto3" json:"variants,omitempty"`
}

func (x *GeneratePlatformVariantsResponse) Reset() {
	*x = GeneratePlatformVariantsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePlatformVariantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePlatformVariantsResponse) ProtoMessage() {}

func (x *GeneratePlatformVariantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePlatformVariantsResponse.ProtoReflect.Descriptor instead.
func (*GeneratePlatformVariantsResponse) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{5}
}

func (x *GeneratePlatformVariantsResponse) GetVariants() []*VideoScript {
	if x != nil {
		return x.Variants
	}
	return nil
}

// 获取视频脚本列表请求
type ListVideoScriptsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Page      int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListVideoScriptsRequest) Reset() {
	*x = ListVideoScriptsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVideoScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVideoScriptsRequest) ProtoMessage() {}

func (x *ListVideoScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVideoScriptsRequest.ProtoReflect.Descriptor instead.
func (*ListVideoScriptsRequest) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{6}
}

func (x *ListVideoScriptsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListVideoScriptsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListVideoScriptsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取视频脚本列表响应
type ListVideoScriptsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scripts []*VideoScript `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
	Total   int32          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListVideoScriptsResponse) Reset() {
	*x = ListVideoScriptsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVideoScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVideoScriptsResponse) ProtoMessage() {}

func (x *ListVideoScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVideoScriptsResponse.ProtoReflect.Descriptor instead.
func (*ListVideoScriptsResponse) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{7}
}

func (x *ListVideoScriptsResponse) GetScripts() []*VideoScript {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *ListVideoScriptsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 获取视频脚本详情请求
type GetVideoScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId string `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
}

func (x *GetVideoScriptRequest) Reset() {
	*x = GetVideoScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoScriptRequest) ProtoMessage() {}

func (x *GetVideoScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoScriptRequest.ProtoReflect.Descriptor instead.
func (*GetVideoScriptRequest) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{8}
}

func (x *GetVideoScriptRequest) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

// 获取视频脚本详情响应
type GetVideoScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoScript *VideoScript `protobuf:"bytes,1,opt,name=video_script,json=videoScript,proto3" json:"video_script,omitempty"`
}

func (x *GetVideoScriptResponse) Reset() {
	*x = GetVideoScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoScriptResponse) ProtoMessage() {}

func (x *GetVideoScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoScriptResponse.ProtoReflect.Descriptor instead.
func (*GetVideoScriptResponse) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{9}
}

func (x *GetVideoScriptResponse) GetVideoScript() *VideoScript {
	if x != nil {
		return x.VideoScript
	}
	return nil
}

// 删除视频脚本请求
type DeleteVideoScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptId string `protobuf:"bytes,1,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`
}

func (x *DeleteVideoScriptRequest) Reset() {
	*x = DeleteVideoScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVideoScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVideoScriptRequest) ProtoMessage() {}

func (x *DeleteVideoScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVideoScriptRequest.ProtoReflect.Descriptor instead.
func (*DeleteVideoScriptRequest) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteVideoScriptRequest) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

// 删除视频脚本响应
type DeleteVideoScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteVideoScriptResponse) Reset() {
	*x = DeleteVideoScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVideoScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVideoScriptResponse) ProtoMessage() {}

func (x *DeleteVideoScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVideoScriptResponse.ProtoReflect.Descriptor instead.
func (*DeleteVideoScriptResponse) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteVideoScriptResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 短视频脚本
type VideoScript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   string        `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ChapterId   string        `protobuf:"bytes,3,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	Title       string        `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Duration    int32         `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`       // 视频时长（秒）
	Platform    string        `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`        // 目标平台
	Style       string        `protobuf:"bytes,7,opt,name=style,proto3" json:"style,omitempty"`              // 风格
	Scenes      []*VideoScene `protobuf:"bytes,8,rep,name=scenes,proto3" json:"scenes,omitempty"`            // 分镜场景
	Hooks       *VideoHooks   `protobuf:"bytes,9,opt,name=hooks,proto3" json:"hooks,omitempty"`              // 钩子点
	Hashtags    []string      `protobuf:"bytes,10,rep,name=hashtags,proto3" json:"hashtags,omitempty"`       // 标签
	Description string        `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"` // 视频描述
	Status      string        `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`           // 状态：draft/optimized/variant/published
	CreatedAt   int64         `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64         `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *VideoScript) Reset() {
	*x = VideoScript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoScript) ProtoMessage() {}

func (x *VideoScript) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoScript.ProtoReflect.Descriptor instead.
func (*VideoScript) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{12}
}

func (x *VideoScript) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VideoScript) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *VideoScript) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *VideoScript) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoScript) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoScript) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *VideoScript) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *VideoScript) GetScenes() []*VideoScene {
	if x != nil {
		return x.Scenes
	}
	return nil
}

func (x *VideoScript) GetHooks() *VideoHooks {
	if x != nil {
		return x.Hooks
	}
	return nil
}

func (x *VideoScript) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *VideoScript) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VideoScript) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VideoScript) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *VideoScript) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 视频分镜场景
type VideoScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index             int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`                                                 // 场景序号
	Duration          int32    `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`                                           // 场景时长（秒）
	ShotType          string   `protobuf:"bytes,3,opt,name=shot_type,json=shotType,proto3" json:"shot_type,omitempty"`                            // 镜头类型
	VisualDescription string   `protobuf:"bytes,4,opt,name=visual_description,json=visualDescription,proto3" json:"visual_description,omitempty"` // 画面描述
	Narration         string   `protobuf:"bytes,5,opt,name=narration,proto3" json:"narration,omitempty"`                                          // 旁白内容
	Subtitle          string   `protobuf:"bytes,6,opt,name=subtitle,proto3" json:"subtitle,omitempty"`                                            // 字幕内容
	SoundEffects      []string `protobuf:"bytes,7,rep,name=sound_effects,json=soundEffects,proto3" json:"sound_effects,omitempty"`                // 音效
	Transition        string   `protobuf:"bytes,8,opt,name=transition,proto3" json:"transition,omitempty"`                                        // 转场效果
	KeyElements       []string `protobuf:"bytes,9,rep,name=key_elements,json=keyElements,proto3" json:"key_elements,omitempty"`                   // 关键元素
}

func (x *VideoScene) Reset() {
	*x = VideoScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoScene) ProtoMessage() {}

func (x *VideoScene) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoScene.ProtoReflect.Descriptor instead.
func (*VideoScene) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{13}
}

func (x *VideoScene) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *VideoScene) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoScene) GetShotType() string {
	if x != nil {
		return x.ShotType
	}
	return ""
}

func (x *VideoScene) GetVisualDescription() string {
	if x != nil {
		return x.VisualDescription
	}
	return ""
}

func (x *VideoScene) GetNarration() string {
	if x != nil {
		return x.Narration
	}
	return ""
}

func (x *VideoScene) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *VideoScene) GetSoundEffects() []string {
	if x != nil {
		return x.SoundEffects
	}
	return nil
}

func (x *VideoScene) GetTransition() string {
	if x != nil {
		return x.Transition
	}
	return ""
}

func (x *VideoScene) GetKeyElements() []string {
	if x != nil {
		return x.KeyElements
	}
	return nil
}

// 视频钩子点
type VideoHooks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opening string `protobuf:"bytes,1,opt,name=opening,proto3" json:"opening,omitempty"` // 开头吸引点
	Climax  string `protobuf:"bytes,2,opt,name=climax,proto3" json:"climax,omitempty"`   // 高潮点
	Ending  string `protobuf:"bytes,3,opt,name=ending,proto3" json:"ending,omitempty"`   // 结尾钩子
}

func (x *VideoHooks) Reset() {
	*x = VideoHooks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_script_v1_video_script_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoHooks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoHooks) ProtoMessage() {}

func (x *VideoHooks) ProtoReflect() protoreflect.Message {
	mi := &file_video_script_v1_video_script_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoHooks.ProtoReflect.Descriptor instead.
func (*VideoHooks) Descriptor() ([]byte, []int) {
	return file_video_script_v1_video_script_proto_rawDescGZIP(), []int{14}
}

func (x *VideoHooks) GetOpening() string {
	if x != nil {
		return x.Opening
	}
	return ""
}

func (x *VideoHooks) GetClimax() string {
	if x != nil {
		return x.Climax
	}
	return ""
}

func (x *VideoHooks) GetEnding() string {
	if x != nil {
		return x.Ending
	}
	return ""
}

var File_video_script_v1_video_script_proto protoreflect.FileDescriptor

var file_video_script_v1_video_script_proto_rawDesc = []byte{
	0x0a, 0x22, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x62, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x0b, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x5d, 0x0a, 0x1a, 0x4f, 0x70, 0x74, 0x69,
	0x6d, 0x69, 0x7a, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x62, 0x0a, 0x1b, 0x4f, 0x70, 0x74, 0x69, 0x6d,
	0x69, 0x7a, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x0b,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x72, 0x0a, 0x1f, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x22,
	0x60, 0x0a, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x73, 0x22, 0x69, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6c, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x07, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x34, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64,
	0x22, 0x5d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22,
	0x37, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0xc3, 0x03, 0x0a, 0x0b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x52, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x05, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x05, 0x68, 0x6f, 0x6f, 0x6b,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xac, 0x02, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x56, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x6f, 0x6f,
	0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c,
	0x69, 0x6d, 0x61, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x32, 0x90, 0x08, 0x0a,
	0x12, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x2f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0xaf, 0x01, 0x0a, 0x13, 0x4f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x1a,
	0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2d, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x12, 0xc3, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a,
	0x22, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2d,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x2f, 0x7b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x73, 0x12, 0xa4, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x94, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x2a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2d, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x9d, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x2a, 0x21, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2d, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x42,
	0x20, 0x5a, 0x1e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_script_v1_video_script_proto_rawDescOnce sync.Once
	file_video_script_v1_video_script_proto_rawDescData = file_video_script_v1_video_script_proto_rawDesc
)

func file_video_script_v1_video_script_proto_rawDescGZIP() []byte {
	file_video_script_v1_video_script_proto_rawDescOnce.Do(func() {
		file_video_script_v1_video_script_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_script_v1_video_script_proto_rawDescData)
	})
	return file_video_script_v1_video_script_proto_rawDescData
}

var file_video_script_v1_video_script_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_video_script_v1_video_script_proto_goTypes = []interface{}{
	(*GenerateVideoScriptRequest)(nil),       // 0: api.video_script.v1.GenerateVideoScriptRequest
	(*GenerateVideoScriptResponse)(nil),      // 1: api.video_script.v1.GenerateVideoScriptResponse
	(*OptimizeVideoScriptRequest)(nil),       // 2: api.video_script.v1.OptimizeVideoScriptRequest
	(*OptimizeVideoScriptResponse)(nil),      // 3: api.video_script.v1.OptimizeVideoScriptResponse
	(*GeneratePlatformVariantsRequest)(nil),  // 4: api.video_script.v1.GeneratePlatformVariantsRequest
	(*GeneratePlatformVariantsResponse)(nil), // 5: api.video_script.v1.GeneratePlatformVariantsResponse
	(*ListVideoScriptsRequest)(nil),          // 6: api.video_script.v1.ListVideoScriptsRequest
	(*ListVideoScriptsResponse)(nil),         // 7: api.video_script.v1.ListVideoScriptsResponse
	(*GetVideoScriptRequest)(nil),            // 8: api.video_script.v1.GetVideoScriptRequest
	(*GetVideoScriptResponse)(nil),           // 9: api.video_script.v1.GetVideoScriptResponse
	(*DeleteVideoScriptRequest)(nil),         // 10: api.video_script.v1.DeleteVideoScriptRequest
	(*DeleteVideoScriptResponse)(nil),        // 11: api.video_script.v1.DeleteVideoScriptResponse
	(*VideoScript)(nil),                      // 12: api.video_script.v1.VideoScript
	(*VideoScene)(nil),                       // 13: api.video_script.v1.VideoScene
	(*VideoHooks)(nil),                       // 14: api.video_script.v1.VideoHooks
}
var file_video_script_v1_video_script_proto_depIdxs = []int32{
	12, // 0: api.video_script.v1.GenerateVideoScriptResponse.video_script:type_name -> api.video_script.v1.VideoScript
	12, // 1: api.video_script.v1.OptimizeVideoScriptResponse.video_script:type_name -> api.video_script.v1.VideoScript
	12, // 2: api.video_script.v1.GeneratePlatformVariantsResponse.variants:type_name -> api.video_script.v1.VideoScript
	12, // 3: api.video_script.v1.ListVideoScriptsResponse.scripts:type_name -> api.video_script.v1.VideoScript
	12, // 4: api.video_script.v1.GetVideoScriptResponse.video_script:type_name -> api.video_script.v1.VideoScript
	13, // 5: api.video_script.v1.VideoScript.scenes:type_name -> api.video_script.v1.VideoScene
	14, // 6: api.video_script.v1.VideoScript.hooks:type_name -> api.video_script.v1.VideoHooks
	0,  // 7: api.video_script.v1.VideoScriptService.GenerateVideoScript:input_type -> api.video_script.v1.GenerateVideoScriptRequest
	2,  // 8: api.video_script.v1.VideoScriptService.OptimizeVideoScript:input_type -> api.video_script.v1.OptimizeVideoScriptRequest
	4,  // 9: api.video_script.v1.VideoScriptService.GeneratePlatformVariants:input_type -> api.video_script.v1.GeneratePlatformVariantsRequest
	6,  // 10: api.video_script.v1.VideoScriptService.ListVideoScripts:input_type -> api.video_script.v1.ListVideoScriptsRequest
	8,  // 11: api.video_script.v1.VideoScriptService.GetVideoScript:input_type -> api.video_script.v1.GetVideoScriptRequest
	10, // 12: api.video_script.v1.VideoScriptService.DeleteVideoScript:input_type -> api.video_script.v1.DeleteVideoScriptRequest
	1,  // 13: api.video_script.v1.VideoScriptService.GenerateVideoScript:output_type -> api.video_script.v1.GenerateVideoScriptResponse
	3,  // 14: api.video_script.v1.VideoScriptService.OptimizeVideoScript:output_type -> api.video_script.v1.OptimizeVideoScriptResponse
	5,  // 15: api.video_script.v1.VideoScriptService.GeneratePlatformVariants:output_type -> api.video_script.v1.GeneratePlatformVariantsResponse
	7,  // 16: api.video_script.v1.VideoScriptService.ListVideoScripts:output_type -> api.video_script.v1.ListVideoScriptsResponse
	9,  // 17: api.video_script.v1.VideoScriptService.GetVideoScript:output_type -> api.video_script.v1.GetVideoScriptResponse
	11, // 18: api.video_script.v1.VideoScriptService.DeleteVideoScript:output_type -> api.video_script.v1.DeleteVideoScriptResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_video_script_v1_video_script_proto_init() }
func file_video_script_v1_video_script_proto_init() {
	if File_video_script_v1_video_script_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_script_v1_video_script_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateVideoScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateVideoScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptimizeVideoScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptimizeVideoScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePlatformVariantsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePlatformVariantsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVideoScriptsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVideoScriptsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVideoScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVideoScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoScript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_script_v1_video_script_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoHooks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_script_v1_video_script_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_script_v1_video_script_proto_goTypes,
		DependencyIndexes: file_video_script_v1_video_script_proto_depIdxs,
		MessageInfos:      file_video_script_v1_video_script_proto_msgTypes,
	}.Build()
	File_video_script_v1_video_script_proto = out.File
	file_video_script_v1_video_script_proto_rawDesc = nil
	file_video_script_v1_video_script_proto_goTypes = nil
	file_video_script_v1_video_script_proto_depIdxs = nil
}
