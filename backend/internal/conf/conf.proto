syntax = "proto3";
package kratos.api;

option go_package = "backend/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  AI ai = 3;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
  }
  message Vector {
    message Embedding {
      string provider = 1;
      string api_key = 2;
      string base_url = 3;
      string model = 4;
      int32 timeout = 5;
    }
    Embedding embedding = 2;
  }
  Database database = 1;
  Redis redis = 2;
  Vector vector = 3;
}

message AI {
  message ModelConfig {
    string provider = 1;
    string model_name = 2;
    string api_key = 3;
    string base_url = 4;
    float temperature = 5;
    int32 max_tokens = 6;
    float top_p = 7;
    google.protobuf.Duration timeout = 8;
  }
  map<string, ModelConfig> models = 1;
}
